import { IStore } from '../sdk/store/IStore';
import { RTCStats } from '../rtc-stats';
import { TypedEventEmitter } from '../utils/typed-event-emitter';
import { HMSRemoteVideoTrack } from '../media/tracks';
interface TrackDegradationControllerEvents {
    TRACK_DEGRADED: HMSRemoteVideoTrack;
    TRACK_RESTORED: HMSRemoteVideoTrack;
}
/** @see docs/Subscribe-Degradation.md */
export declare class TrackDegradationController extends TypedEventEmitter<TrackDegradationControllerEvents> {
    private store;
    private readonly TAG;
    private readonly PACKETS_LOST_THRESHOLD;
    private readonly MIN_DEGRADE_GRACE_PERIOD;
    private readonly MIN_RECOVER_GRACE_PERIOD;
    private readonly MAX_RECOVER_GRACE_PERIOD;
    private recoveringTrack?;
    private degradeGracePeriod;
    private recoverGracePeriod;
    private recoverAttemptCount;
    private packetsLost;
    private get isAttemptingRecover();
    constructor(store: IStore);
    handleRtcStatsChange(rtcStats: RTCStats): void;
    degrade(): void;
    recover(): void;
    private degradeActiveTracksByHalf;
    private getActiveTracks;
    private cancelRecovery;
    private getDelayForRecoverCount;
}
export {};
