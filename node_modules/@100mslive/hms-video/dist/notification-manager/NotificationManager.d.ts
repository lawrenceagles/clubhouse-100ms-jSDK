import { HMSAudioListener, HMSUpdateListener } from '../interfaces';
import { HMSRemoteTrack } from '../media/tracks';
import { IStore } from '../sdk/store';
export declare class NotificationManager {
    private store;
    private listener?;
    private audioListener?;
    private TAG;
    private trackManager;
    private peerManager;
    private peerListManager;
    private activeSpeakerManager;
    private broadcastManager;
    private policyChangeManager;
    private requestManager;
    private roomUpdateManager;
    private eventEmitter;
    constructor(store: IStore, listener?: HMSUpdateListener | undefined, audioListener?: HMSAudioListener | undefined);
    setListener(listener?: HMSUpdateListener): void;
    setAudioListener(audioListener?: HMSAudioListener): void;
    addEventListener(event: string, listener: EventListener): void;
    removeEventListener(event: string, listener: EventListener): void;
    once(event: string, listener: EventListener): void;
    handleNotification(message: {
        method: string;
        params: any;
    }, isReconnecting?: boolean): void;
    handleTrackAdd: (track: HMSRemoteTrack) => void;
    handleTrackRemove: (track: HMSRemoteTrack) => void;
}
